#include<stdio.h>
int visited[10],startNode,cyclic=0;
int n,a[10][10];
void dfs(int v){
    int i;
    visited[v]=1;
    for(i=0;i<n;i++){
        if(a[v][i]==1){
            if(i==startNode){
                printf("The graph is cyclic.\n");
                cyclic=1;
                break;
            }
            if(visited[i]==0){
                dfs(i);
            }
        }
    }
}
void checkCycle(){
    int i,j;
    for(j=0;j<n;j++){
        visited[j]=0;
    }
    for(i=0;i<n;i++){
        startNode=i;
        //printf("Start node: %d\n",startNode);
        dfs(i);
        if(cyclic==1)
            break;
        //printf("Printing visited node from start node %d\n",startNode);
        for(j=0;j<n;j++){
            //printf("%d\t",visited[j]);
            visited[j]=0;
        }
        //printf("\n");
    }
    if(cyclic==0){
        printf("The Graph is not cyclic\n");
    }
}
int main(){
    int i,j;
    printf("Enter the number of elements\n");
    scanf("%d",&n);
    printf("Enter the graph matrix\n");
    for(i=0;i<n;i++){
        printf("Enter the row %d: ",i+1);
        for(j=0;j<n;j++){
            scanf("%d",&a[i][j]);
        }
    }
    checkCycle();
}

// merge sort

#include<stdio.h>
void merge(int b[],int c[],int a[],int nOfB,int nOfC){
    int i=0,j=0,k=0;
     while(i<nOfB&&j<nOfC){
        if(b[i]<=c[j]){
            a[k]=b[i];
            i++;
        }else{
            a[k]=c[j];
            j++;
        }
        k++;
    }
   
    if(i==nOfB){
        for(j;j<nOfC;j++){
            a[k]=c[j];
            k++;
        }
    }
    else{
        for(i;i<nOfC;i++){
            a[k]=b[i];
            k++;
        }
    }
    
}
void inputArray(int a[],int n){
    int i;
    for(i=0;i<n;i++){
        scanf("%d",&a[i]);
    }
}
int main(){
    int n1,n2,i,n,median;
    printf("Enter the number of elements in array 1\n");
    scanf("%d",&n1);
    printf("Enter the sort array 1\n");
    int b[n1];
    inputArray(b,n1);
    printf("Enter the number of elements in array 2\n");
    scanf("%d",&n2);
    printf("Enter the sort array 2\n");
    int c[n2];
    inputArray(c,n2);
    n=n1+n2;
    int a[n];
    merge(b,c,a,n1,n2);
    for(i=0;i<n1+n2;i++){
        printf("%d\t",a[i]);
    }
    printf("\n");
    if(n%2==1){
        median=(n+1)/2;
        printf("Median is %d\n",a[median-1]);
    }
    else {
        median=(n)/2;
        printf("Median is %f\n",(float)(a[median-1]+a[median])/2);
    }
    return 0;
}
